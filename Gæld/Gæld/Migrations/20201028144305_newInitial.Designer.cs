// <auto-generated />
using System;
using Gæld.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gæld.Migrations
{
    [DbContext(typeof(DebtBookContext))]
    [Migration("20201028144305_newInitial")]
    partial class newInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gæld.Database.Models.DebtEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Debts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = -30,
                            Date = new DateTime(2020, 10, 28, 15, 43, 5, 121, DateTimeKind.Local).AddTicks(6322),
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = -15,
                            Date = new DateTime(2020, 10, 28, 15, 43, 5, 123, DateTimeKind.Local).AddTicks(6325),
                            PersonId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 19,
                            Date = new DateTime(2020, 10, 28, 15, 43, 5, 123, DateTimeKind.Local).AddTicks(6325),
                            PersonId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 5000,
                            Date = new DateTime(2020, 10, 28, 15, 43, 5, 123, DateTimeKind.Local).AddTicks(6325),
                            PersonId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = -5000,
                            Date = new DateTime(2020, 9, 28, 15, 43, 5, 123, DateTimeKind.Local).AddTicks(6325),
                            PersonId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1234,
                            Date = new DateTime(2020, 10, 13, 15, 43, 5, 123, DateTimeKind.Local).AddTicks(6325),
                            PersonId = 4
                        });
                });

            modelBuilder.Entity("Gæld.Database.Models.PersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Carsten"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sebastian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ermin Jensen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rayquaza"
                        });
                });

            modelBuilder.Entity("Gæld.Database.Models.DebtEntity", b =>
                {
                    b.HasOne("Gæld.Database.Models.PersonEntity", "Person")
                        .WithMany("Debts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
